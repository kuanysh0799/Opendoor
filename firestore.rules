rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{uid} {
      allow read:  if request.auth != null;
      allow create: if request.auth != null
                    && request.auth.uid == uid
                    && !exists(/databases/$(database)/documents/users/$(uid));
      allow update: if request.auth != null
                    && request.auth.uid == uid
                    && !( 'role' in request.resource.data.diff(resource.data).changedKeys() );
      allow delete: if false;
    }

    match /deals/{id} {
      allow read: if request.auth != null;
      allow create, update: if isRole(['owner','manager']);
      allow delete: if isRole(['owner']);
    }

    match /clients/{id} {
      allow read: if request.auth != null;
      allow create, update: if isRole(['owner','manager']);
      allow delete: if isRole(['owner']);
    }

    function isRole(roles) {
      return request.auth != null
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }
  }
}
